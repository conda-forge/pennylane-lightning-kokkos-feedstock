diff --git a/setup.py b/setup.py
index af1fd60..69a9ab3 100644
--- a/setup.py
+++ b/setup.py
@@ -87,20 +87,36 @@ if not os.getenv("READTHEDOCS"):
                 configure_args += [
                     "-DKokkos_ENABLE_OPENMP=OFF"
                 ]  # only build with Clang under Windows
+            # Add more platform dependent options
+            elif platform.system() == "Darwin":
+                clang_path = Path(shutil.which("clang++")).parent.parent
+                configure_args += [
+                    f"-DCMAKE_CXX_COMPILER={clang_path}/bin/clang++",
+                    f"-DCMAKE_LINKER={clang_path}/bin/lld",
+                ]
+                if shutil.which("brew"):
+                    libomp_path = subprocess.run(
+                        "brew --prefix libomp".split(" "),
+                        check=False,
+                        capture_output=True,
+                        text=True,
+                    ).stdout.strip()
+                    if not Path(libomp_path).exists():
+                        libomp_path = ""
+                    configure_args += (
+                        [f"-DOpenMP_ROOT={libomp_path}/"] if libomp_path else ["-DENABLE_OPENMP=OFF"]
+                    )
             elif platform.system() not in ["Darwin", "Linux"]:
                 raise RuntimeError(f"Unsupported '{platform.system()}' platform")
 
             if not Path(self.build_temp).exists():
                 os.makedirs(self.build_temp)
 
-            if "CMAKE_ARGS" not in os.environ.keys():
-                os.environ["CMAKE_ARGS"] = ""
+            if "CMAKE_ARGS" in os.environ.keys():
+                configure_args += os.environ["CMAKE_ARGS"].split(" ")
 
             subprocess.check_call(
-                ["cmake"]
-                + os.environ["CMAKE_ARGS"].split(" ")
-                + [str(ext.sourcedir)]
-                + configure_args,
+                ["cmake", str(ext.sourcedir)] + configure_args,
                 cwd=self.build_temp,
                 env=os.environ,
             )
